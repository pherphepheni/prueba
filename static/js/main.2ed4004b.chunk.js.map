{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","componentes/Gasto.js","componentes/Listado.js","componentes/Presupuesto.js","helper.js","componentes/Restante.js","componentes/ControlPresupuesto.js","componentes/App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","titulo","FormularioGasto","nombregastoRef","React","createRef","cantidadGastoRef","crearGasto","e","preventDefault","gasto","nombreGasto","_this","current","value","cantidadGasto","agregarGasto2","onSubmit","this","className","ref","type","placeholder","step","Component","Gasto","_this$props$gasto","Listado","Object","keys","gastos","map","key","componentes_Gasto","Presupuesto","presupuesto","validarPresupuesto","totalPresupuesto","parseInt","revisarPresupuesto","restante","Restante","ControlPresupuesto","Fragment","componentes_Presupuesto","componentes_Restante","App","state","agregarGasto","objectSpread","concat","Date","now","restarPresupuesto","setState","obtenerPresupuesto","prompt","cantidad","restar","Number","componentes_Header","Formulario","componentes_Listado","componentes_ControlPresupuesto","Boolean","window","location","hostname","match","ReactDOM","render","componentes_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2ed4004b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header=(props)=>{\r\n    return(\r\n  <header>\r\n            <h1>{props.titulo}</h1>\r\n    </header>\r\n    )\r\n}\r\nexport default Header;","import React, {Component} from 'react';\r\n\r\nclass FormularioGasto extends Component{\r\n    \r\n    //REFS para leer los campos del formulario\r\n\r\n    nombregastoRef = React.createRef();\r\n    cantidadGastoRef = React.createRef();\r\n\r\n\r\n    crearGasto = (e) =>{\r\n        e.preventDefault();\r\n      const gasto = {\r\n          nombreGasto:this.nombregastoRef.current.value,\r\n          cantidadGasto:this.cantidadGastoRef.current.value\r\n      }      \r\n            \r\n         this.props.agregarGasto2(gasto);  \r\n    }\r\n    \r\n    \r\n    render(){\r\n        return(\r\n            <form onSubmit={this.crearGasto}>\r\n            <h2>Agrega tus gastos aqui</h2>\r\n            <div className=\"campo\">\r\n                <label>Nombre Gasto</label>\r\n                <input ref={this.nombregastoRef} className=\"u-full-width\" type=\"text\" placeholder=\"Ej. Transporte\" />\r\n            </div>\r\n        \r\n            <div className=\"campo\">\r\n                <label>Cantidad</label>\r\n                <input  ref={this.cantidadGastoRef} className=\"u-full-width\" type=\"number\" step =\"any\" placeholder=\"Ej. 300\" />\r\n            </div>\r\n        \r\n            <input className=\"button-primary u-full-width\" type=\"submit\" value=\"Agregar\" />\r\n        </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormularioGasto;","import React, {Component} from 'react';\r\n\r\nclass Gasto extends Component{\r\n        render(){\r\n         const {cantidadGasto,nombreGasto} = this.props.gasto\r\n\r\n            return(\r\n                <li className=\"gastos\">\r\n                    <p>\r\n                        {nombreGasto}\r\n                        <span className=\"gasto\">$ {cantidadGasto}</span>\r\n                    </p>\r\n                </li>\r\n            )\r\n\r\n        }\r\n\r\n}\r\n\r\nexport default Gasto;","import React, {Component} from 'react';\r\nimport Gasto from './Gasto';\r\n\r\n\r\nclass Listado extends Component{\r\n    render(){\r\n        return(\r\n           <div className=\"gastos-realizados\">\r\n           <h2>Listado</h2>              \r\n               {Object.keys( this.props.gastos ).map(key =>(\r\n               \r\n                <Gasto\r\n                    key={key}\r\n                    gasto={this.props.gastos[key]}\r\n                />\r\n                ))}\r\n                \r\n           </div>\r\n        )\r\n    }\r\n \r\n}\r\n\r\nexport default Listado;","import React, {Component} from 'react';\r\n\r\nclass Presupuesto extends Component{\r\n    render(){\r\n        return (\r\n                <div className=\"alert alert-primary\">\r\n                   Presupuesto : $ {this.props.presupuesto}\r\n                </div>\r\n\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default Presupuesto;","export const validarPresupuesto = presupuesto => {\r\n    let totalPresupuesto = parseInt(presupuesto);\r\n\r\n    if(totalPresupuesto > 0 ) {\r\n        return totalPresupuesto;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const revisarPresupuesto = (presupuesto,restante) => {\r\n    let clase;\r\n    // Comprobar el 25% \r\n    if( (presupuesto / 4) > restante) {\r\n         clase = 'alert alert-danger';\r\n    } else if( (presupuesto / 2) > restante) {\r\n        clase = 'alert alert-warning'\r\n    } else {\r\n        clase = 'alert alert alert-success';\r\n    }\r\n    return clase;\r\n} ","import React, {Component} from 'react';\r\nimport {revisarPresupuesto} from '../helper';\r\n\r\nclass Restante extends Component{\r\n    render(){\r\n            const presupuesto = this.props.presupuesto;\r\n            const restante = this.props.restante;\r\n\r\n\r\n        return (\r\n                <div className={revisarPresupuesto(presupuesto,restante)}>\r\n                Restante: ${this.props.restante}\r\n                </div>\r\n\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default Restante;","import React, {Component} from 'react';\r\nimport Presupuesto from './Presupuesto';\r\nimport Restante from './Restante';\r\n\r\nclass ControlPresupuesto extends Component{\r\n    render(){\r\n        return (\r\n                <React.Fragment>\r\n                     <Presupuesto\r\n                    presupuesto={this.props.presupuesto}\r\n                    />\r\n\r\n\r\n                    <Restante\r\n                        presupuesto={this.props.presupuesto}\r\n                        restante={this.props.restante}\r\n                    />\r\n\r\n           \r\n                   \r\n\r\n                </React.Fragment>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default ControlPresupuesto;","import React, { Component } from 'react';\nimport '../css/App.css';\nimport Header from './Header';\nimport Formulario from './Formulario';\nimport Listado from './Listado';\nimport ControlPresupuesto from './ControlPresupuesto';\nimport {validarPresupuesto} from '../helper';\n\nclass App extends Component {\n\n    state = {\n    \n      gastos:{},\n      presupuesto :'',\n      restante: ''\n    }\n\n    agregarGasto = gasto =>{\n      \n      const gastos = {...this.state.gastos};\n         gastos[`gasto${Date.now()}`]=gasto;  \n         \n         this.restarPresupuesto(gasto.cantidadGasto);\n\n        this.setState({\n          gastos\n        }) \n    }\n\n\n    obtenerPresupuesto = () =>{\n      let presupuesto = prompt('cual es el presupuesto?');\n      let resultado = validarPresupuesto(presupuesto);\n      if(resultado){\n        this.setState({\n          presupuesto : presupuesto,\n          restante : presupuesto\n        })\n      }else{\n        this.obtenerPresupuesto();\n      }\n    }\n\n    componentDidMount(){\n      this.obtenerPresupuesto();\n     } \n \n\n  //restar del presupuesto cuando un gasto se crea\n      restarPresupuesto = cantidad => {\n        //leer el gasto\n\n        let restar = Number(cantidad)\n        //tomamos una copia de state actual\n        let restante = this.state.restante;\n        //lo restamos\n        restante -= restar;\n        //agregamos al nuevo state\n        this.setState({\n          restante\n        })\n  }\n \n\n  render() {\n    return (\n      <div className=\"App container\">\n        <Header\n          titulo='Gasto semanal'\n        />\n\n        <div className=\"contenido-principal contenido\">\n            <div className=\"row\">\n              <div className=\"one-half column\"> \n                  <Formulario\n               //la variable que usamos aca la tenemos que usar tambien. en eset caso agregarGasto2  en el formulario.js\n                      agregarGasto2 = {this.agregarGasto}\n\n                  />\n              </div>\n                <div className=\"one-half column\">\n                   \n                   <Listado\n                      gastos={this.state.gastos}\n                    />\n                    <ControlPresupuesto \n                      presupuesto = {this.state.presupuesto}\n                      restante = {this.state.restante}\n                    />\n                     \n                </div>\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './componentes/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}